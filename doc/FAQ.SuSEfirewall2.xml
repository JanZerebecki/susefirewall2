<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.docbook.org/xml/4.3/docbookx.dtd">

<article>
  <articleinfo>
    <title>SuSEfirewall2 FAQ</title>
  </articleinfo>
  <qandaset>

    <qandaentry>

      <question>
	<para>
	  Why is communication between two interfaces in the same zone not working?
	</para>
      </question>
      <answer>

	<para>

	  For security reasons, no network may communicate to another until
	  configured otherwise. Even if both are "trusted" internal networks.
	  You can allow full traffic with
	  <varname>FW_ALLOW_CLASS_ROUTING</varname> or specifying all allowed
	  traffic with <varname>FW_FORWARD</varname>. Keep in mind that this
	  affects all interfaces in all zones.

	</para>

      </answer>

    </qandaentry>

    <qandaentry>

      <question>
	<para>Some service does not work when the firewall is enabled. How do I find out what's wrong?
	</para>
      </question>

      <answer>

	<para>

	  Enable logging of all dropped packets and disable the log limit in
	  <filename>/etc/sysconfig/SuSEfirewall2</filename>:
	  <informalexample>
	    <programlisting>FW_LOG_DROP_CRIT="yes"
FW_LOG_DROP_ALL="yes"
FW_LOG_LIMIT="no"</programlisting>
	  </informalexample>

	  Run <command>SuSEfirewall2</command> again.
	  <filename>/var/log/messages</filename> will now quickly fill up with
	  log messages about dropped packets when you try to use the not
	  working service. Those messages tell you the protocol and port you
	  need to open.
	</para>

	<para>

	  You may also run SuSEfirewall2 in test mode:
	  <command>SuSEfirewall2&nbsp;test</command>. Then try to connect to the
	  service in a way which failed before. It will work
	  because SuSEfirewall2 does <emphasis>not</emphasis> actually filter any
	  packets this time. However, it will still log all packets it normally
	  would have dropped.

	</para>

	<para>

	  If everything works again don't forget to set the log options back to
	  normal to not fill up you log files.

	</para>

      </answer>

    </qandaentry>

    <qandaentry>

      <question>
	<para>
	  Some web site that offers port scanning claims my system is not
	  protected properly as it still responds to ICMP echo requests (ping)
	</para>
      </question>

      <answer>

	<para>
	  ICMP echo requests are harmless however they are a fundametal means
	  to determine whether hosts are still reachable. Blocking them would
	  seriously impact the ability to track down network problems. It is
	  therefore not considered nice behaviour for an internet citizen to
	  drop pings.
	</para>

      </answer>

    </qandaentry>

    <qandaentry>
      <question>
	<para>
	  Can't the evil guys detect whether my host is online if it responds
	  to ICMP echo requests?
	</para>
      </question>
      <answer>
	<para>
	  Yes but they can detect that anyways. The router at your provider
	  behaves different depending on whether someone is dialed in or not.
	</para>
      </answer>
    </qandaentry>

    <qandaentry>
      <question>
	<para>
	  SuSEfirewall2 drops most packets but it doesn't fully hide the
	  presence of my machine. Isn't that a security hole?
	</para>
      </question>
      <answer>
	<para>
	  You machine is never fully invisible, see previous question. The
	  purpose of dropping packets is not to hide your machine but to slow
	  down port scans.
	</para>
      </answer>
    </qandaentry>

    <qandaentry>

      <question>
	<para>
	  The <literal>ipsec0</literal> interface I had with kernel 2.4 is
	  gone. How do I assign IPsec traffic to a different zone now?
	</para>
      </question>

      <answer>

	<para>

	  Set the variable <varname>FW_IPSEC_TRUST</varname> to the zone you
	  would have put the <literal>ipsec0</literal> into before. For example
	  if your IPsec tunnel is set up on the external interface but you want
	  to grant the <emphasis>decrypted</emphasis> traffic access to all
	  your services as if it was in the internal zone:

	  <informalexample>
	    <programlisting>FW_IPSEC_TRUST="int"
FW_SERVICES_EXT_IP="esp"
FW_SERVICES_EXT_UDP="isakmp"
FW_PROTECT_FROM_INT="no"</programlisting>
	  </informalexample>

	</para>

      </answer>

    </qandaentry>

    <qandaentry>

      <question>
	<para>
	  Why is SuSEfirewall2 so slow? / Can't you just use iptables-restore?
	</para>
      </question>

      <answer>

	<para>

	  <literal>SuSEfirewall2</literal> is implemented in bourne shell which is not exactly the
	  fastest thing on earth especially if it has that much work to do as
	  <literal>SuSEfirewall2</literal>. Administrators still prefer bourne shell scripts
	  because of readability <emphasis>*cough*</emphasis>.
	</para>

	<para>
	  <literal>SuSEfirewall2</literal> already uses a method
	  similar to <literal>iptables-restore</literal> to apply
	  as much filter rules as possible at once.
	  <literal>SuSEfirewall2</literal> doesn't use
	  <literal>iptables-restore</literal> natively to be able to
	  easily fall back to individual <literal>iptables</literal>
	  calls in case of error.
	</para>

      </answer>

    </qandaentry>

    <qandaentry>

      <question>
	<para>
	  Enabling drbd blocks the boot process. How to get around that?
	</para>
      </question>

      <answer>

	<para>

	  During boot process all incoming traffic is blocked
	  unconditionally. The very last boot script then sets up
	  the configured firewall rules. The problem is that drbd
	  blocks the boot process while waiting for incoming
	  connection from other nodes. Therefore configuring the
	  drbd port in <literal>SuSEfirewall2</literal> has no
	  effect.

	</para>

	<itemizedlist>

	  <listitem>
	    <para>
	      SLES10
	    </para>
	    <para>
	      Add a manual iptables call to
	      <literal>/etc/init.d/boot.local</literal>:
	    <informalexample>
	      <programlisting>iptables -A INPUT -p tcp --dport 7788 -j ACCEPT</programlisting>
	    </informalexample>

	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      SLES11, openSUSE &lt;= 11.2
	    </para>
	    <para>
	      On SLES11 SuSEfirewall2_init is called after
	      boot.local, therefore the method for SLES10
	      doesn't work anymore. It's possible to modify the
	      dependencies of the SuSEfirewall2_setup script to run
	      before drbd though:
	      <itemizedlist>

		<listitem>
		  <para>
		    Create the directory
		    <filename>/etc/insserv/overrides</filename>
		  </para>
		</listitem>

		<listitem>
		  <para>
		    Create a new file
		    <filename>/etc/insserv/overrides/SuSEfirewall2_setup</filename>
		  </para>
		</listitem>

		<listitem>
		  <para>
		    Copy the the LSB header (the part between and
		    including the lines "<literal>### BEGIN INIT
		      INFO</literal>" and "<literal>### END INIT
		      INFO</literal>") from
		    <filename>/etc/init.d/SuSEfirewall2_setup</filename>
		    to
		    <filename>/etc/insserv/overrides/SuSEfirewall2_setup</filename>
		  </para>
		</listitem>

		<listitem>
		  <para>
		    Replace <literal>$ALL</literal> with
		    <literal>$null</literal> and add the following
		    line:
		    <informalexample>
		      <programlisting># X-Start-Before: drbd</programlisting>
		    </informalexample>

		  </para>
		</listitem>

		<listitem>
		  <para>
		    run <command>/sbin/insserv</command>
		  </para>
		</listitem>

	      </itemizedlist>

	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      openSUSE &gt;= 11.3
	    </para>
	    <para>
	      Configure the open ports for <literal>drbd</literal> and set
	    <informalexample>
	      <programlisting>FW_BOOT_FULL_INIT="yes"</programlisting>
	    </informalexample>

	    </para>
	  </listitem>

	</itemizedlist>

      </answer>

    </qandaentry>

    <qandaentry>

      <question>
	<para>
	  I need to connect to differntly trusted networks, e.g. to
	  use printing or file sharing. How can I solve that without
	  opening ports in the external zone?
	</para>
      </question>

      <answer>

	<para>

	  The <ulink
	    url="http://lizards.opensuse.org/2009/08/28/firewall-zone-switcher-updated/">Firewall
	    Zone Switcher applet</ulink> allows desktop users to
	  switch zones with only few mouse clicks. It's included in
	  openSUSE since version 11.2.

	</para>

      </answer>

    </qandaentry>

    <qandaentry>

      <question>
	<para>
	  I'm executing an external script from within <literal>FW_CUSTOMRULES</literal> but the rules my script installs vanish.
	</para>
      </question>

      <answer>

	<para>

	  When <literal>FW_USE_IPTABLES_BATCH</literal> is on (which
	  is the default) the <command>iptables</command> command is
	  an alias that doesn't exist outside the script context of
	  SuSEfirewall2. So either must source your script or set
	  <literal>FW_USE_IPTABLES_BATCH="no"</literal>

	</para>

      </answer>

    </qandaentry>

  </qandaset>

</article>

<!-- vim:set sw=2: -->
